<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.0.7</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.eoi</groupId>
	<artifactId>ejemplospringboot</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>ejemplospringboot</name>
	<description>Proyecto Guía de Springboot</description>
	<properties>
			<java.version>20</java.version>
			<sonar.host.url>http://localhost:9000</sonar.host.url>
			<sonar.language>java</sonar.language>
			<sonar.scm.provider>git</sonar.scm.provider>
			<sonar.login>squ_c44911bac48445dbd00c4dea39269f9a52d9ac24</sonar.login>
	</properties>
	

	<profiles>
		<profile>
			<!-- Perfil local -->
			<id>local</id>
			<!-- Otros elementos de configuración del perfil local -->
		</profile>

		<profile>
			<!-- Perfil de desarrollo -->
			<id>dev</id>
			<!-- Otros elementos de configuración del perfil de desarrollo -->
		</profile>

		<profile>
			<!-- Perfil de producción -->
			<id>prod</id>
			<!-- Otros elementos de configuración del perfil de producción -->
		</profile>
		<profile>
			<id>coverage</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>0.8.10</version>
						<executions>
							<execution>
								<id>prepare-agent</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
							<execution>
								<id>report</id>
								<goals>
									<goal>report</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>



	<dependencies>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<scope>runtime</scope>
		</dependency>


		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.fabric8</groupId>
			<artifactId>docker-maven-plugin</artifactId>
			<version>0.37.0</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.jacoco/jacoco-maven-plugin -->
		<dependency>
			<groupId>org.jacoco</groupId>
			<artifactId>jacoco-maven-plugin</artifactId>
			<version>0.8.10</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>webjars-locator</artifactId>
			<version>0.46</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>bootstrap</artifactId>
			<version>5.2.3</version>
		</dependency>
		<dependency>
			<groupId>org.webjars.npm</groupId>
			<artifactId>bootstrap-icons</artifactId>
			<version>1.10.5</version>
		</dependency>

		<dependency>
			<groupId>nz.net.ultraq.thymeleaf</groupId>
			<artifactId>thymeleaf-layout-dialect</artifactId>
			<version>2.0.5</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

	</dependencies>

	<build>
		<plugins>

			<!-- Plugin de Spring Boot Maven -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>build-image</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!-- Configuración del plugin Spring Boot Maven -->
					<imageName>alejandroteixeira/spring-boot:latest</imageName>
					<excludes>
						<!-- Exclusión de la dependencia Lombok -->
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<!-- Excluir pruebas de integración utilizando un patrón -->
					<excludes>
						<exclude>**/*IntegrationTest.java</exclude>
						<exclude>**/*IT.java</exclude>
					</excludes>
				</configuration>
			</plugin>
			<!-- Plugin Docker Maven -->
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.38.0</version>
				<configuration>
					<!-- Configuración del plugin Docker Maven -->
					<dockerHost>unix:///home/alejandro/.docker/desktop/docker.sock</dockerHost>
					<images>
						<!-- Configuración de las imágenes Docker -->
						<image>
							<!-- Configuración de la imagen MySQL -->
							<name>mysql:latest</name>
							<run>
								<network>
									<mode>bridge</mode>
								</network>
								<ports>
									<port>3306:3306</port>
								</ports>
								<env>
									<MYSQL_ROOT_PASSWORD>password</MYSQL_ROOT_PASSWORD>
								</env>
							</run>
						</image>
						<image>
							<!-- Configuración de la imagen de la aplicación -->
							<name>alejandroteixeira/spring-boot:latest</name>
							<run>
								<network>
									<mode>bridge</mode>
								</network>
								<ports>
									<port>80:8080</port>
								</ports>
								<env>
									<DATABASE_HOST>mysql-server-dev</DATABASE_HOST>
									<SPRING_PROFILE>dev</SPRING_PROFILE>
								</env>
							</run>
						</image>
					</images>
				</configuration>
				<executions>
					<!-- Ejecución del plugin Docker Maven para iniciar y detener los contenedores -->
					<execution>
						<id>docker-start</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
					</execution>
					<execution>
						<id>docker-stop</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<execution>
						<id>integration-tests</id>
						<phase>integration-test</phase>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<includes>
								<include>**/*Test.java</include>
							</includes>

							<!-- Configuración adicional del plugin Failsafe -->
							<systemPropertyVariables>
								<stopContainersOnFail>true</stopContainersOnFail>
							</systemPropertyVariables>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>3.9.1.2184</version>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.6</version>
				<executions>
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<phase>test-compile</phase>
					</execution>
					<execution>
						<id>report</id>
						<goals>
							<goal>report</goal>
						</goals>
						<phase>test</phase>
					</execution>
				</executions>
			</plugin>
		</plugins>

	</build>
</project>
